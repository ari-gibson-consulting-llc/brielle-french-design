---
import { Image } from "astro:assets";
import type { ContentfulAssetArr } from "../lib/getContent";
type Props = {
  images: ContentfulAssetArr;
  slidesToShow: number | undefined;
};
const { images } = Astro.props;

const slidesToShow = (() => {
  const numOfSlides = Astro.props.slidesToShow ?? 3;

  return {
    sm: 1,
    md: Math.min(numOfSlides, 2),
    lg: Math.min(numOfSlides, 3),
  };
})();
---

<astro-carousel
  class="blaze-slider pb-24 px-28"
  data-slides={JSON.stringify(slidesToShow)}
  style={`--sm-slides-to-show: ${slidesToShow.sm}; --md-slides-to-show: ${slidesToShow.md}; --lg-slides-to-show: ${slidesToShow.lg};`}
>
  <div class="blaze-container">
    <div class="blaze-track-container">
      <div class="blaze-track">
        {
          images.map((slide) => (
            <Image
              src={slide.fields.file!.url + "?fm=webp&q=75"}
              alt={slide.fields.description as string | null}
              width={slide.fields.file!.details.image!.width}
              height={slide.fields.file!.details.image!.height}
            />
          ))
        }
      </div>
    </div>
  </div>

  <div class="flex-gap-2 md:flex-gap-4 mt-4 flex items-center justify-center">
    <button class="blaze-prev">prev</button>
    <div class="blaze-pagination flex-gap-4 flex"></div>
    <button class="blaze-next">next</button>
  </div>
</astro-carousel>

<style>
  html {
    --c1: #141414;
    --c2: #1e1e1e;
    --c3: #282828;
    --c4: #505050;
    --h: #f84fb7;
  }

  .blaze-slider.dragging .blaze-track {
    cursor: grabbing;
  }

  .blaze-track > * {
    display: flex;
    font-size: 30px;
    justify-content: center;
    align-items: center;
    font-family:
      system-ui,
      -apple-system,
      "Segoe UI",
      Roboto,
      Ubuntu,
      Cantarell,
      "Noto Sans",
      sans-serif;
    background: var(--c2);
    color: white;
    border: 2px solid var(--c4);
    border-radius: 8px;
  }

  .blaze-next,
  .blaze-prev {
    border: none;
    font-size: 0;
    width: 20px;
    height: 20px;
    background: none;
    cursor: pointer;
    background-position: center;
    background-size: 100%;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='24' viewBox='0 0 24 24' width='24'%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3Cpath fill='%23f84fb7' d='M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z'/%3E%3C/svg%3E");
  }

  .blaze-next {
    transform: rotate(180deg);
  }

  /* for loop: false */
  .blaze-slider.start .blaze-prev,
  .blaze-slider.end .blaze-next {
    opacity: 0.5;
    cursor: not-allowed;
  }

  /* fix layout shifts */

  .blaze-slider {
    --slides-to-show: --sm-slides-to-show;
  }

  @media (min-width: 768px) {
    .blaze-slider {
      --slides-to-show: --md-slides-to-show;
    }
  }

  @media (min-width: 1024px) {
    .blaze-slider {
      --slides-to-show: --lg-slides-to-show;
    }
  }
</style>

<style is:global>
  /*
    needs to be global scoped because these elements don't exist on page render
    Astro strips this specific styling from the bundle through minification
    (I think)
  */
  .blaze-pagination button {
    font-size: 0;
    border-radius: 50%;
    outline: none;
    border: none;
    background: var(--h);
    cursor: pointer;
    transition:
      transform 200ms ease,
      background-color 300ms ease;
    @apply h-3 w-3 md:h-4 md:w-4;
  }

  .blaze-pagination button.active {
    background: var(--h);
    transform: scale(1.3);
  }
</style>

<script>
  import BlazeSlider from "blaze-slider";
  import "blaze-slider/dist/blaze.css";

  class AstroCarousel extends HTMLElement {
    constructor() {
      super();

      const numOfSlides = JSON.parse(this.dataset.slides!) as {
        sm: number;
        md: number;
        lg: number;
      };

      new BlazeSlider(this, {
        all: {
          slidesToScroll: 1,
          slidesToShow: numOfSlides.sm,
          enableAutoplay: true,
          autoplayInterval: 4000,
          stopAutoplayOnInteraction: true,
        },
        "(min-width: 768px)": {
          slidesToShow: numOfSlides.md,
        },
        "(min-width: 1024px)": {
          slidesToShow: numOfSlides.lg,
        },
      });
    }
  }

  customElements.define("astro-carousel", AstroCarousel);
</script>
