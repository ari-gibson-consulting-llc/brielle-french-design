---
import "blaze-slider/dist/blaze.css";
import { Image } from "astro:assets";
import type { ContentfulPortfolioEntryCarousels } from "../../lib/getContent";

type Props = Pick<
  ContentfulPortfolioEntryCarousels["fields"],
  "firstCarousel" | "secondCarousel" | "thirdCarousel" | "fourthCarousel"
>;

const { firstCarousel, secondCarousel, thirdCarousel, fourthCarousel } = Astro.props;
console.log(firstCarousel);
---

{
  [firstCarousel, secondCarousel, thirdCarousel].map(
    (
      carousel
      // @ts-ignore
    ) =>
      carousel && (
        <div class="blaze-slider my-slider">
          <div class="blaze-container">
            <div class="blaze-track-container">
              <div class="blaze-track">
                {carousel.map((slide) => (
                  <Image
                    class="pb-4"
                    src={slide.fields.file.url}
                    alt={slide.fields.description}
                    width={slide.fields.file.details.image.width}
                    height={slide.fields.file.details.image.height}
                  />
                ))}
              </div>
            </div>
          </div>

          <div class="controls">
            <button class="blaze-prev">prev</button>
            <div class="blaze-pagination" />
            <button class="blaze-next">next</button>
          </div>
        </div>
      )
  )
}

<style>
  html {
    --c1: hsl(212deg 22% 10%);
    --c2: hsl(215deg 22% 15%);
    --c3: hsl(215deg 22% 20%);
    --c4: hsl(215deg 22% 40%);
    --h: hsl(175deg 75% 55%);
  }

  .controls {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 50px;
    gap: 20px;
  }

  .blaze-slider.dragging .blaze-track {
    cursor: grabbing;
  }

  .blaze-track > * {
    min-height: 300px;
    display: flex;
    font-size: 30px;
    justify-content: center;
    align-items: center;
    font-family: system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell,
      "Noto Sans", sans-serif;
    background: var(--c2);
    color: white;
    border: 2px solid var(--c4);
    border-radius: 8px;
  }

  /* pagination buttons */

  .blaze-pagination {
    display: flex;
    gap: 15px;
  }

  .blaze-pagination button {
    font-size: 0;
    width: 15px;
    height: 15px;
    border-radius: 50%;
    outline: none;
    border: none;
    background: var(--c3);
    cursor: pointer;
    transition: transform 200ms ease, background-color 300ms ease;
  }

  .blaze-pagination button.active {
    background: var(--h);
    transform: scale(1.3);
  }

  .blaze-next,
  .blaze-prev {
    border: none;
    font-size: 0;
    width: 20px;
    height: 20px;
    background: none;
    cursor: pointer;
    background-position: center;
    background-size: 100%;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='24' viewBox='0 0 24 24' width='24'%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3Cpath fill='%2337e2d5' d='M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z'/%3E%3C/svg%3E");
  }

  .blaze-next {
    transform: rotate(180deg);
  }

  /* for loop: false */
  .blaze-slider.start .blaze-prev,
  .blaze-slider.end .blaze-next {
    opacity: 0.5;
    cursor: not-allowed;
  }

  /* fix layout shifts */

  .blaze-slider.my-slider {
    --slides-to-show: 3;
  }

  @media (max-width: 700px) {
    .blaze-slider.my-slider {
      --slides-to-show: 2;
    }
  }

  @media (max-width: 500px) {
    .blaze-slider.my-slider {
      --slides-to-show: 1;
    }
  }
</style>

<script>
  import BlazeSlider from "blaze-slider";
  const sliders = document.querySelectorAll(".blaze-slider") as Array<HTMLElement>;
  sliders.forEach(
    (slider) =>
      new BlazeSlider(slider, {
        all: {
          slidesToScroll: 1,
          slidesToShow: 1,
          enableAutoplay: true,
        },
        "(max-width: 700px)": {
          slidesToScroll: 2,
        },
        "(max-width: 500px)": {
          slidesToScroll: 1,
        },
      })
  );
</script>
